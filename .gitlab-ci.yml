variables:
  #        ;     ,   
  MSBUILD_CONCURRENCY: 4
  #     ,     ,  
  NUGET_PATH: 'C:\Nuget\nuget.exe'
  MSBUILD_PATH: 'C:\Program Files\Microsoft Visual Studio\2022\Community\Msbuild\Current\Bin\msbuild.exe'
  XUNIT_PATH: 'C:\Tools\xunit.runner.console.2.3.1\xunit.console.exe'
  TESTS_OUTPUT_FOLDER_PATH: '.\tests\CiCdExample.Tests\bin\Release\'
  visualStudioPath: C:\Program Files\Microsoft Visual Studio\2022\Community
  VSWHERE_PATH: '%ProgramFiles(x86)%\Microsoft Visual Studio\Installer\vswhere.exe'

.before_msbuild: &enter_vsdevshell
  before_script:
    - CHCP 65001
    - '$vsWherePath = [System.Environment]::ExpandEnvironmentVariables($env:VSWHERE_PATH)'
    - '& $vsWherePath -latest -format value -property installationPath -products Microsoft.VisualStudio.Product.BuildTools | Tee-Object -Variable visualStudioPath'
    - '"$visualStudioPath"'
    - 'Join-Path "$visualStudioPath" "\Common7\Tools\Microsoft.VisualStudio.DevShell.dll" | Import-Module'
    - 'Enter-VsDevShell -VsInstallPath:"$visualStudioPath" -SkipAutomaticLocation'

.before_deploy: &deploy
  before_script:
    #- $OutputEncoding = [System.Text.Encording]::UTF8
    - CHCP 65001

stages:
  - build
  - deploy

build:
  <<: *enter_vsdevshell
  stage: build
  tags:
    - windows-build
  only:
    - master
  script: 
    - 'dotnet restore TeklaHierarchicDefinitions.sln'
    #- '& msbuild restore "AutoJoint\AutoJoint.cproj"'
    #- '& "$env:NUGET_PATH" restore'
    - '& msbuild /t:restore /m:$env:MSBUILD_CONCURRENCY /nr:false /clp:ErrorsOnly'
    - '& msbuild /p:Configuration=Release /p:Platform="x64" /m:$env:MSBUILD_CONCURRENCY /nr:false /clp:ErrorsOnly' # ;  clp:ErrorsOnly   ;  nr:false   msbuild     
    #- Any CPU
    - |
      $projects = @("TeklaHierarchicDefinitions", "CustomProperties")
      foreach ($project in $projects) {
        $sourcePath = "$project/bin/x64/Release/"
        $destPath = "Release/$project/"
        if (Test-Path $sourcePath) {
          New-Item -ItemType Directory -Force -Path $destPath | Out-Null
          Copy-Item -Path "$sourcePath*" -Destination $destPath -Recurse -Force
        }
      }    
    #- ls "AutoJoint"
    #- ls "AutoJoint/bin/x64"
    #- ls "AutoJoint/bin/x64/Release"
    - echo $CI_PROJECT_DIR
    - ls "$CI_PROJECT_DIR\TeklaHierarchicDefinitions"
    - C:\TeklaStructures\2023.0\bin\TeklaExtensionPackage.BatchBuilder.exe -i $CI_PROJECT_DIR\TeklaHierarchicDefinitions\TSEP Package input\Manifest.xml -o $CI_PROJECT_DIR\Release\TSEP\ElementList.tsep -l $CI_PROJECT_DIR\Release\TSEP\
  artifacts:
    expire_in: 2 days   
    paths:
      - Release/
 

deploy:  
  stage: deploy
  tags:
    - linux-build
  only:
    - master
  #before_script:  
  # - CHCP 65001
  script: 
    #- ls /Release/TSEP/
    #- ping fs-ide.gti.local
    #- ls "\\fs-ide.gti.local\20_Office\80_\110_\Tekla\ASD-Presets\TRIMBLE\IDE-Library\ExtensionsLibrary\TSEP installators\" 
    - cp -fr Release/TSEP/Autojoint.tsep "/etc/fs/ElementList/"
    #- Copy-Item -Path 'Release\TSEP\Autojoint.tsep' -Destination '\\fs-ide.gti.local\20_Office\80_\110_\Tekla\ASD-Presets\TRIMBLE\IDE-Library\ExtensionsLibrary\TSEP installators\Autojoint.tsep' -Force
  needs:
    - job: build
      artifacts: true
