string_utf8 albl_WindowName
{
    entry = ("enu", "Element list specification");
    entry = ("chs", "Element list specification");
    entry = ("cht", "Element list specification");
    entry = ("csy", "Element list specification");
    entry = ("deu", "Element list specification");
    entry = ("esp", "Element list specification");
    entry = ("fra", "Element list specification");
    entry = ("hun", "Element list specification");
    entry = ("ita", "Element list specification");
    entry = ("jpn", "Element list specification");
    entry = ("kor", "Element list specification");
    entry = ("nld", "Element list specification");
    entry = ("plk", "Element list specification");
    entry = ("ptb", "Element list specification");
    entry = ("ptg", "Element list specification");
    entry = ("rus", "Ведомость элементов");
};

string_utf8 albl_Select_profile
{
    entry = ("enu", "Select profile");
    entry = ("chs", "Select profile");
    entry = ("cht", "Select profile");
    entry = ("csy", "Select profile");
    entry = ("deu", "Select profile");
    entry = ("esp", "Select profile");
    entry = ("fra", "Select profile");
    entry = ("hun", "Select profile");
    entry = ("ita", "Select profile");
    entry = ("jpn", "Select profile");
    entry = ("kor", "Select profile");
    entry = ("nld", "Select profile");
    entry = ("plk", "Select profile");
    entry = ("ptb", "Select profile");
    entry = ("ptg", "Select profile");
    entry = ("rus", "Выберите профиль");
};

string_utf8 albl_Select_material
{
    entry = ("enu", "Select material");
    entry = ("chs", "Select material");
    entry = ("cht", "Select material");
    entry = ("csy", "Select material");
    entry = ("deu", "Select material");
    entry = ("esp", "Select material");
    entry = ("fra", "Select material");
    entry = ("hun", "Select material");
    entry = ("ita", "Select material");
    entry = ("jpn", "Select material");
    entry = ("kor", "Select material");
    entry = ("nld", "Select material");
    entry = ("plk", "Select material");
    entry = ("ptb", "Select material");
    entry = ("ptg", "Select material");
    entry = ("rus", "Выберите материал");
};

string_utf8 albl_Add_row
{
    entry = ("enu", "Add row");
    entry = ("chs", "Add row");
    entry = ("cht", "Add row");
    entry = ("csy", "Add row");
    entry = ("deu", "Add row");
    entry = ("esp", "Add row");
    entry = ("fra", "Add row");
    entry = ("hun", "Add row");
    entry = ("ita", "Add row");
    entry = ("jpn", "Add row");
    entry = ("kor", "Add row");
    entry = ("nld", "Add row");
    entry = ("plk", "Add row");
    entry = ("ptb", "Add row");
    entry = ("ptg", "Add row");
    entry = ("rus", "Добавить строку");
};

string_utf8 albl_Delete_row
{
    entry = ("enu", "Delete row");
    entry = ("chs", "Delete row");
    entry = ("cht", "Delete row");
    entry = ("csy", "Delete row");
    entry = ("deu", "Delete row");
    entry = ("esp", "Delete row");
    entry = ("fra", "Delete row");
    entry = ("hun", "Delete row");
    entry = ("ita", "Delete row");
    entry = ("jpn", "Delete row");
    entry = ("kor", "Delete row");
    entry = ("nld", "Delete row");
    entry = ("plk", "Delete row");
    entry = ("ptb", "Delete row");
    entry = ("ptg", "Delete row");
    entry = ("rus", "Удалить строку");
};

string_utf8 albl_Table_is_blocked
{
    entry = ("enu", "Table is blocked");
    entry = ("chs", "Table is blocked");
    entry = ("cht", "Table is blocked");
    entry = ("csy", "Table is blocked");
    entry = ("deu", "Table is blocked");
    entry = ("esp", "Table is blocked");
    entry = ("fra", "Table is blocked");
    entry = ("hun", "Table is blocked");
    entry = ("ita", "Table is blocked");
    entry = ("jpn", "Table is blocked");
    entry = ("kor", "Table is blocked");
    entry = ("nld", "Table is blocked");
    entry = ("plk", "Table is blocked");
    entry = ("ptb", "Table is blocked");
    entry = ("ptg", "Table is blocked");
    entry = ("rus", "Таблица заблокирована");
};

string_utf8 albl_Update_parts_instantly
{
    entry = ("enu", "Update parts instantly");
    entry = ("chs", "Update parts instantly");
    entry = ("cht", "Update parts instantly");
    entry = ("csy", "Update parts instantly");
    entry = ("deu", "Update parts instantly");
    entry = ("esp", "Update parts instantly");
    entry = ("fra", "Update parts instantly");
    entry = ("hun", "Update parts instantly");
    entry = ("ita", "Update parts instantly");
    entry = ("jpn", "Update parts instantly");
    entry = ("kor", "Update parts instantly");
    entry = ("nld", "Update parts instantly");
    entry = ("plk", "Update parts instantly");
    entry = ("ptb", "Update parts instantly");
    entry = ("ptg", "Update parts instantly");
    entry = ("rus", "Обновлять автоматически");
};

string_utf8 albl_Update_parts
{
    entry = ("enu", "Update parts");
    entry = ("chs", "Update parts");
    entry = ("cht", "Update parts");
    entry = ("csy", "Update parts");
    entry = ("deu", "Update parts");
    entry = ("esp", "Update parts");
    entry = ("fra", "Update parts");
    entry = ("hun", "Update parts");
    entry = ("ita", "Update parts");
    entry = ("jpn", "Update parts");
    entry = ("kor", "Update parts");
    entry = ("nld", "Update parts");
    entry = ("plk", "Update parts");
    entry = ("ptb", "Update parts");
    entry = ("ptg", "Update parts");
    entry = ("rus", "Обновить детали");
};

string_utf8 albl_Unbounded_parts
{
    entry = ("enu", "Unbounded parts");
    entry = ("chs", "Unbounded parts");
    entry = ("cht", "Unbounded parts");
    entry = ("csy", "Unbounded parts");
    entry = ("deu", "Unbounded parts");
    entry = ("esp", "Unbounded parts");
    entry = ("fra", "Unbounded parts");
    entry = ("hun", "Unbounded parts");
    entry = ("ita", "Unbounded parts");
    entry = ("jpn", "Unbounded parts");
    entry = ("kor", "Unbounded parts");
    entry = ("nld", "Unbounded parts");
    entry = ("plk", "Unbounded parts");
    entry = ("ptb", "Unbounded parts");
    entry = ("ptg", "Unbounded parts");
    entry = ("rus", "Выделить открепленные");
};

string_utf8 albl_Remove_parts
{
    entry = ("enu", "Remove parts");
    entry = ("chs", "Remove parts");
    entry = ("cht", "Remove parts");
    entry = ("csy", "Remove parts");
    entry = ("deu", "Remove parts");
    entry = ("esp", "Remove parts");
    entry = ("fra", "Remove parts");
    entry = ("hun", "Remove parts");
    entry = ("ita", "Remove parts");
    entry = ("jpn", "Remove parts");
    entry = ("kor", "Remove parts");
    entry = ("nld", "Remove parts");
    entry = ("plk", "Remove parts");
    entry = ("ptb", "Remove parts");
    entry = ("ptg", "Remove parts");
    entry = ("rus", "Открепить детали");
};

string_utf8 albl_Highlight_objects_in_model_view
{
    entry = ("enu", "Highlight objects in model view");
    entry = ("chs", "Highlight objects in model view");
    entry = ("cht", "Highlight objects in model view");
    entry = ("csy", "Highlight objects in model view");
    entry = ("deu", "Highlight objects in model view");
    entry = ("esp", "Highlight objects in model view");
    entry = ("fra", "Highlight objects in model view");
    entry = ("hun", "Highlight objects in model view");
    entry = ("ita", "Highlight objects in model view");
    entry = ("jpn", "Highlight objects in model view");
    entry = ("kor", "Highlight objects in model view");
    entry = ("nld", "Highlight objects in model view");
    entry = ("plk", "Highlight objects in model view");
    entry = ("ptb", "Highlight objects in model view");
    entry = ("ptg", "Highlight objects in model view");
    entry = ("rus", "Выделить в модели");
};

string_utf8 albl_Attach_parts
{
    entry = ("enu", "Attach parts");
    entry = ("chs", "Attach parts");
    entry = ("cht", "Attach parts");
    entry = ("csy", "Attach parts");
    entry = ("deu", "Attach parts");
    entry = ("esp", "Attach parts");
    entry = ("fra", "Attach parts");
    entry = ("hun", "Attach parts");
    entry = ("ita", "Attach parts");
    entry = ("jpn", "Attach parts");
    entry = ("kor", "Attach parts");
    entry = ("nld", "Attach parts");
    entry = ("plk", "Attach parts");
    entry = ("ptb", "Attach parts");
    entry = ("ptg", "Attach parts");
    entry = ("rus", "Прикрепить детали");
};

string_utf8 albl_Selection
{
    entry = ("enu", "Selection");
    entry = ("chs", "Selection");
    entry = ("cht", "Selection");
    entry = ("csy", "Selection");
    entry = ("deu", "Selection");
    entry = ("esp", "Selection");
    entry = ("fra", "Selection");
    entry = ("hun", "Selection");
    entry = ("ita", "Selection");
    entry = ("jpn", "Selection");
    entry = ("kor", "Selection");
    entry = ("nld", "Selection");
    entry = ("plk", "Selection");
    entry = ("ptb", "Selection");
    entry = ("ptg", "Selection");
    entry = ("rus", "Выбор");
};

string_utf8 albl_Mark
{
    entry = ("enu", "Mark");
    entry = ("chs", "Mark");
    entry = ("cht", "Mark");
    entry = ("csy", "Mark");
    entry = ("deu", "Mark");
    entry = ("esp", "Mark");
    entry = ("fra", "Mark");
    entry = ("hun", "Mark");
    entry = ("ita", "Mark");
    entry = ("jpn", "Mark");
    entry = ("kor", "Mark");
    entry = ("nld", "Mark");
    entry = ("plk", "Mark");
    entry = ("ptb", "Mark");
    entry = ("ptg", "Mark");
    entry = ("rus", "Марка");
};

string_utf8 albl_BOE
{
    entry = ("enu", "EL");
    entry = ("chs", "EL");
    entry = ("cht", "EL");
    entry = ("csy", "EL");
    entry = ("deu", "EL");
    entry = ("esp", "EL");
    entry = ("fra", "EL");
    entry = ("hun", "EL");
    entry = ("ita", "EL");
    entry = ("jpn", "EL");
    entry = ("kor", "EL");
    entry = ("nld", "EL");
    entry = ("plk", "EL");
    entry = ("ptb", "EL");
    entry = ("ptg", "EL");
    entry = ("rus", "ВЭ");
};

string_utf8 albl_Classificator
{
    entry = ("enu", "Class");
    entry = ("chs", "Class");
    entry = ("cht", "Class");
    entry = ("csy", "Class");
    entry = ("deu", "Class");
    entry = ("esp", "Class");
    entry = ("fra", "Class");
    entry = ("hun", "Class");
    entry = ("ita", "Class");
    entry = ("jpn", "Class");
    entry = ("kor", "Class");
    entry = ("nld", "Class");
    entry = ("plk", "Class");
    entry = ("ptb", "Class");
    entry = ("ptg", "Class");
    entry = ("rus", "Класс");
};

string_utf8 albl_NSummary
{
    entry = ("enu", "N field");
    entry = ("chs", "N field");
    entry = ("cht", "N field");
    entry = ("csy", "N field");
    entry = ("deu", "N field");
    entry = ("esp", "N field");
    entry = ("fra", "N field");
    entry = ("hun", "N field");
    entry = ("ita", "N field");
    entry = ("jpn", "N field");
    entry = ("kor", "N field");
    entry = ("nld", "N field");
    entry = ("plk", "N field");
    entry = ("ptb", "N field");
    entry = ("ptg", "N field");
    entry = ("rus", "N поле");
};

string_utf8 albl_QSummary
{
    entry = ("enu", "Q field");
    entry = ("chs", "Q field");
    entry = ("cht", "Q field");
    entry = ("csy", "Q field");
    entry = ("deu", "Q field");
    entry = ("esp", "Q field");
    entry = ("fra", "Q field");
    entry = ("hun", "Q field");
    entry = ("ita", "Q field");
    entry = ("jpn", "Q field");
    entry = ("kor", "Q field");
    entry = ("nld", "Q field");
    entry = ("plk", "Q field");
    entry = ("ptb", "Q field");
    entry = ("ptg", "Q field");
    entry = ("rus", "Q поле");
};

string_utf8 albl_MomentConnections
{
    entry = ("enu", "Moment");
    entry = ("chs", "Moment");
    entry = ("cht", "Moment");
    entry = ("csy", "Moment");
    entry = ("deu", "Moment");
    entry = ("esp", "Moment");
    entry = ("fra", "Moment");
    entry = ("hun", "Moment");
    entry = ("ita", "Moment");
    entry = ("jpn", "Moment");
    entry = ("kor", "Moment");
    entry = ("nld", "Moment");
    entry = ("plk", "Moment");
    entry = ("ptb", "Moment");
    entry = ("ptg", "Moment");
    entry = ("rus", "Жесткое");
};

string_utf8 albl_FrictionConnections
{
    entry = ("enu", "Friction");
    entry = ("chs", "Friction");
    entry = ("cht", "Friction");
    entry = ("csy", "Friction");
    entry = ("deu", "Friction");
    entry = ("esp", "Friction");
    entry = ("fra", "Friction");
    entry = ("hun", "Friction");
    entry = ("ita", "Friction");
    entry = ("jpn", "Friction");
    entry = ("kor", "Friction");
    entry = ("nld", "Friction");
    entry = ("plk", "Friction");
    entry = ("ptb", "Friction");
    entry = ("ptg", "Friction");
    entry = ("rus", "Фрикционное");
};

string_utf8 albl_Father
{
    entry = ("enu", "Father");
    entry = ("chs", "Father");
    entry = ("cht", "Father");
    entry = ("csy", "Father");
    entry = ("deu", "Father");
    entry = ("esp", "Father");
    entry = ("fra", "Father");
    entry = ("hun", "Father");
    entry = ("ita", "Father");
    entry = ("jpn", "Father");
    entry = ("kor", "Father");
    entry = ("nld", "Father");
    entry = ("plk", "Father");
    entry = ("ptb", "Father");
    entry = ("ptg", "Father");
    entry = ("rus", "Родитель");
};

string_utf8 albl_Position
{
    entry = ("enu", "Position");
    entry = ("chs", "Position");
    entry = ("cht", "Position");
    entry = ("csy", "Position");
    entry = ("deu", "Position");
    entry = ("esp", "Position");
    entry = ("fra", "Position");
    entry = ("hun", "Position");
    entry = ("ita", "Position");
    entry = ("jpn", "Position");
    entry = ("kor", "Position");
    entry = ("nld", "Position");
    entry = ("plk", "Position");
    entry = ("ptb", "Position");
    entry = ("ptg", "Position");
    entry = ("rus", "Поз.");
};

string_utf8 albl_Material
{
    entry = ("enu", "Material");
    entry = ("chs", "Material");
    entry = ("cht", "Material");
    entry = ("csy", "Material");
    entry = ("deu", "Material");
    entry = ("esp", "Material");
    entry = ("fra", "Material");
    entry = ("hun", "Material");
    entry = ("ita", "Material");
    entry = ("jpn", "Material");
    entry = ("kor", "Material");
    entry = ("nld", "Material");
    entry = ("plk", "Material");
    entry = ("ptb", "Material");
    entry = ("ptg", "Material");
    entry = ("rus", "Материал");
};

string_utf8 albl_Profile
{
    entry = ("enu", "Profile");
    entry = ("chs", "Profile");
    entry = ("cht", "Profile");
    entry = ("csy", "Profile");
    entry = ("deu", "Profile");
    entry = ("esp", "Profile");
    entry = ("fra", "Profile");
    entry = ("hun", "Profile");
    entry = ("ita", "Profile");
    entry = ("jpn", "Profile");
    entry = ("kor", "Profile");
    entry = ("nld", "Profile");
    entry = ("plk", "Profile");
    entry = ("ptb", "Profile");
    entry = ("ptg", "Profile");
    entry = ("rus", "Профиль");
};

string_utf8 albl_ProfileForSpec
{
    entry = ("enu", "Profile for EL");
    entry = ("chs", "Profile for EL");
    entry = ("cht", "Profile for EL");
    entry = ("csy", "Profile for EL");
    entry = ("deu", "Profile for EL");
    entry = ("esp", "Profile for EL");
    entry = ("fra", "Profile for EL");
    entry = ("hun", "Profile for EL");
    entry = ("ita", "Profile for EL");
    entry = ("jpn", "Profile for EL");
    entry = ("kor", "Profile for EL");
    entry = ("nld", "Profile for EL");
    entry = ("plk", "Profile for EL");
    entry = ("ptb", "Profile for EL");
    entry = ("ptg", "Profile for EL");
    entry = ("rus", "Профиль в ВЭ");
};

string_utf8 albl_Notes
{
    entry = ("enu", "Notes");
    entry = ("chs", "Notes");
    entry = ("cht", "Notes");
    entry = ("csy", "Notes");
    entry = ("deu", "Notes");
    entry = ("esp", "Notes");
    entry = ("fra", "Notes");
    entry = ("hun", "Notes");
    entry = ("ita", "Notes");
    entry = ("jpn", "Notes");
    entry = ("kor", "Notes");
    entry = ("nld", "Notes");
    entry = ("plk", "Notes");
    entry = ("ptb", "Notes");
    entry = ("ptg", "Notes");
    entry = ("rus", "Примечание");
};

string_utf8 albl_Sketch
{
    entry = ("enu", "Sketch");
    entry = ("chs", "Sketch");
    entry = ("cht", "Sketch");
    entry = ("csy", "Sketch");
    entry = ("deu", "Sketch");
    entry = ("esp", "Sketch");
    entry = ("fra", "Sketch");
    entry = ("hun", "Sketch");
    entry = ("ita", "Sketch");
    entry = ("jpn", "Sketch");
    entry = ("kor", "Sketch");
    entry = ("nld", "Sketch");
    entry = ("plk", "Sketch");
    entry = ("ptb", "Sketch");
    entry = ("ptg", "Sketch");
    entry = ("rus", "Эскиз");
};

string_utf8 albl_Cross_section_on_other_list
{
    entry = ("enu", "Cross section on other list");
    entry = ("chs", "Cross section on other list");
    entry = ("cht", "Cross section on other list");
    entry = ("csy", "Cross section on other list");
    entry = ("deu", "Cross section on other list");
    entry = ("esp", "Cross section on other list");
    entry = ("fra", "Cross section on other list");
    entry = ("hun", "Cross section on other list");
    entry = ("ita", "Cross section on other list");
    entry = ("jpn", "Cross section on other list");
    entry = ("kor", "Cross section on other list");
    entry = ("nld", "Cross section on other list");
    entry = ("plk", "Cross section on other list");
    entry = ("ptb", "Cross section on other list");
    entry = ("ptg", "Cross section on other list");
    entry = ("rus", "На др.листе");
};

string_utf8 albl_Is_complex_cross_section
{
    entry = ("enu", "Сomplex cross section");
    entry = ("chs", "Сomplex cross section");
    entry = ("cht", "Сomplex cross section");
    entry = ("csy", "Сomplex cross section");
    entry = ("deu", "Сomplex cross section");
    entry = ("esp", "Сomplex cross section");
    entry = ("fra", "Сomplex cross section");
    entry = ("hun", "Сomplex cross section");
    entry = ("ita", "Сomplex cross section");
    entry = ("jpn", "Сomplex cross section");
    entry = ("kor", "Сomplex cross section");
    entry = ("nld", "Сomplex cross section");
    entry = ("plk", "Сomplex cross section");
    entry = ("ptb", "Сomplex cross section");
    entry = ("ptg", "Сomplex cross section");
    entry = ("rus", "Сечение сложное");
};

string_utf8 albl_Empty_rows_number
{
    entry = ("enu", "Empty rows number");
    entry = ("chs", "Empty rows number");
    entry = ("cht", "Empty rows number");
    entry = ("csy", "Empty rows number");
    entry = ("deu", "Empty rows number");
    entry = ("esp", "Empty rows number");
    entry = ("fra", "Empty rows number");
    entry = ("hun", "Empty rows number");
    entry = ("ita", "Empty rows number");
    entry = ("jpn", "Empty rows number");
    entry = ("kor", "Empty rows number");
    entry = ("nld", "Empty rows number");
    entry = ("plk", "Empty rows number");
    entry = ("ptb", "Empty rows number");
    entry = ("ptg", "Empty rows number");
    entry = ("rus", "Пустых строк");
};


string_utf8 albl_Ref_list
{
    entry = ("enu", "Referenced list");
    entry = ("chs", "Referenced list");
    entry = ("cht", "Referenced list");
    entry = ("csy", "Referenced list");
    entry = ("deu", "Referenced list");
    entry = ("esp", "Referenced list");
    entry = ("fra", "Referenced list");
    entry = ("hun", "Referenced list");
    entry = ("ita", "Referenced list");
    entry = ("jpn", "Referenced list");
    entry = ("kor", "Referenced list");
    entry = ("nld", "Referenced list");
    entry = ("plk", "Referenced list");
    entry = ("ptb", "Referenced list");
    entry = ("ptg", "Referenced list");
    entry = ("rus", "Ссылочный лист");
};


string_utf8 albl_Window_on_top
{
    entry = ("enu", "Keep on top");
    entry = ("chs", "Keep on top");
    entry = ("cht", "Keep on top");
    entry = ("csy", "Keep on top");
    entry = ("deu", "Keep on top");
    entry = ("esp", "Keep on top");
    entry = ("fra", "Keep on top");
    entry = ("hun", "Keep on top");
    entry = ("ita", "Keep on top");
    entry = ("jpn", "Keep on top");
    entry = ("kor", "Keep on top");
    entry = ("nld", "Keep on top");
    entry = ("plk", "Keep on top");
    entry = ("ptb", "Keep on top");
    entry = ("ptg", "Keep on top");
    entry = ("rus", "Поверх окон");
};

string_utf8 albl_ElementList
{
    entry = ("enu", "Element list");
    entry = ("chs", "Element list");
    entry = ("cht", "Element list");
    entry = ("csy", "Element list");
    entry = ("deu", "Element list");
    entry = ("esp", "Element list");
    entry = ("fra", "Element list");
    entry = ("hun", "Element list");
    entry = ("ita", "Element list");
    entry = ("jpn", "Element list");
    entry = ("kor", "Element list");
    entry = ("nld", "Element list");
    entry = ("plk", "Element list");
    entry = ("ptb", "Element list");
    entry = ("ptg", "Element list");
    entry = ("rus", "Ведомость элементов");
};

string_utf8 albl_FoundationLoads
{
    entry = ("enu", "Foundation loads");
    entry = ("chs", "Foundation loads");
    entry = ("cht", "Foundation loads");
    entry = ("csy", "Foundation loads");
    entry = ("deu", "Foundation loads");
    entry = ("esp", "Foundation loads");
    entry = ("fra", "Foundation loads");
    entry = ("hun", "Foundation loads");
    entry = ("ita", "Foundation loads");
    entry = ("jpn", "Foundation loads");
    entry = ("kor", "Foundation loads");
    entry = ("nld", "Foundation loads");
    entry = ("plk", "Foundation loads");
    entry = ("ptb", "Foundation loads");
    entry = ("ptg", "Foundation loads");
    entry = ("rus", "Нагрузки на фундаменты");
};


string_utf8 albl_RotationNotAllowed
{
    entry = ("enu", "Consider rotation");
    entry = ("chs", "Consider rotation");
    entry = ("cht", "Consider rotation");
    entry = ("csy", "Consider rotation");
    entry = ("deu", "Consider rotation");
    entry = ("esp", "Consider rotation");
    entry = ("fra", "Consider rotation");
    entry = ("hun", "Consider rotation");
    entry = ("ita", "Consider rotation");
    entry = ("jpn", "Consider rotation");
    entry = ("kor", "Consider rotation");
    entry = ("nld", "Consider rotation");
    entry = ("plk", "Consider rotation");
    entry = ("ptb", "Consider rotation");
    entry = ("ptg", "Consider rotation");
    entry = ("rus", "Учит.поворот");
};

string_utf8 albl_Categories
{
    entry = ("enu", "Categories");
    entry = ("chs", "Categories");
    entry = ("cht", "Categories");
    entry = ("csy", "Categories");
    entry = ("deu", "Categories");
    entry = ("esp", "Categories");
    entry = ("fra", "Categories");
    entry = ("hun", "Categories");
    entry = ("ita", "Categories");
    entry = ("jpn", "Categories");
    entry = ("kor", "Categories");
    entry = ("nld", "Categories");
    entry = ("plk", "Categories");
    entry = ("ptb", "Categories");
    entry = ("ptg", "Categories");
    entry = ("rus", "Категории");
};


string_utf8 albl_AttachHOposition
{
    entry = ("enu", "Add as subposition");
    entry = ("chs", "Add as subposition");
    entry = ("cht", "Add as subposition");
    entry = ("csy", "Add as subposition");
    entry = ("deu", "Add as subposition");
    entry = ("esp", "Add as subposition");
    entry = ("fra", "Add as subposition");
    entry = ("hun", "Add as subposition");
    entry = ("ita", "Add as subposition");
    entry = ("jpn", "Add as subposition");
    entry = ("kor", "Add as subposition");
    entry = ("nld", "Add as subposition");
    entry = ("plk", "Add as subposition");
    entry = ("ptb", "Add as subposition");
    entry = ("ptg", "Add as subposition");
    entry = ("rus", "Добавить подчиненную позицию");
};


string_utf8 albl_RemoveFromHO
{
    entry = ("enu", "Deattach subpositions");
    entry = ("chs", "Deattach subpositions");
    entry = ("cht", "Deattach subpositions");
    entry = ("csy", "Deattach subpositions");
    entry = ("deu", "Deattach subpositions");
    entry = ("esp", "Deattach subpositions");
    entry = ("fra", "Deattach subpositions");
    entry = ("hun", "Deattach subpositions");
    entry = ("ita", "Deattach subpositions");
    entry = ("jpn", "Deattach subpositions");
    entry = ("kor", "Deattach subpositions");
    entry = ("nld", "Deattach subpositions");
    entry = ("plk", "Deattach subpositions");
    entry = ("ptb", "Deattach subpositions");
    entry = ("ptg", "Deattach subpositions");
    entry = ("rus", "Открепить позиции");
};

string_utf8 albl_SelectSimilarParts
{
    entry = ("enu", "Select similar");
    entry = ("chs", "Select similar");
    entry = ("cht", "Select similar");
    entry = ("csy", "Select similar");
    entry = ("deu", "Select similar");
    entry = ("esp", "Select similar");
    entry = ("fra", "Select similar");
    entry = ("hun", "Select similar");
    entry = ("ita", "Select similar");
    entry = ("jpn", "Select similar");
    entry = ("kor", "Select similar");
    entry = ("nld", "Select similar");
    entry = ("plk", "Select similar");
    entry = ("ptb", "Select similar");
    entry = ("ptg", "Select similar");
    entry = ("rus", "Выбрать похожие");
};

string_utf8 albl_Num
{
    entry = ("enu", "Count");
    entry = ("chs", "Count");
    entry = ("cht", "Count");
    entry = ("csy", "Count");
    entry = ("deu", "Count");
    entry = ("esp", "Count");
    entry = ("fra", "Count");
    entry = ("hun", "Count");
    entry = ("ita", "Count");
    entry = ("jpn", "Count");
    entry = ("kor", "Count");
    entry = ("nld", "Count");
    entry = ("plk", "Count");
    entry = ("ptb", "Count");
    entry = ("ptg", "Count");
    entry = ("rus", "Кол.");
};

string_utf8 albl_BorrowProperties
{
    entry = ("enu", "Borrow properties");
    entry = ("chs", "Borrow properties");
    entry = ("cht", "Borrow properties");
    entry = ("csy", "Borrow properties");
    entry = ("deu", "Borrow properties");
    entry = ("esp", "Borrow properties");
    entry = ("fra", "Borrow properties");
    entry = ("hun", "Borrow properties");
    entry = ("ita", "Borrow properties");
    entry = ("jpn", "Borrow properties");
    entry = ("kor", "Borrow properties");
    entry = ("nld", "Borrow properties");
    entry = ("plk", "Borrow properties");
    entry = ("ptb", "Borrow properties");
    entry = ("ptg", "Borrow properties");
    entry = ("rus", "Заимствовать свойства");
};

string_utf8 albl_FilterMark
{
    entry = ("enu", "Filter by mark");
    entry = ("chs", "Filter by mark");
    entry = ("cht", "Filter by mark");
    entry = ("csy", "Filter by mark");
    entry = ("deu", "Filter by mark");
    entry = ("esp", "Filter by mark");
    entry = ("fra", "Filter by mark");
    entry = ("hun", "Filter by mark");
    entry = ("ita", "Filter by mark");
    entry = ("jpn", "Filter by mark");
    entry = ("kor", "Filter by mark");
    entry = ("nld", "Filter by mark");
    entry = ("plk", "Filter by mark");
    entry = ("ptb", "Filter by mark");
    entry = ("ptg", "Filter by mark");
    entry = ("rus", "Фильтр по марке");
};

string_utf8 albl_FilterProfile
{
    entry = ("enu", "Filter by profile");
    entry = ("chs", "Filter by profile");
    entry = ("cht", "Filter by profile");
    entry = ("csy", "Filter by profile");
    entry = ("deu", "Filter by profile");
    entry = ("esp", "Filter by profile");
    entry = ("fra", "Filter by profile");
    entry = ("hun", "Filter by profile");
    entry = ("ita", "Filter by profile");
    entry = ("jpn", "Filter by profile");
    entry = ("kor", "Filter by profile");
    entry = ("nld", "Filter by profile");
    entry = ("plk", "Filter by profile");
    entry = ("ptb", "Filter by profile");
    entry = ("ptg", "Filter by profile");
    entry = ("rus", "Фильтр по профилю");
};

string_utf8 albl_FilterMaterial
{
    entry = ("enu", "Filter by material");
    entry = ("chs", "Filter by material");
    entry = ("cht", "Filter by material");
    entry = ("csy", "Filter by material");
    entry = ("deu", "Filter by material");
    entry = ("esp", "Filter by material");
    entry = ("fra", "Filter by material");
    entry = ("hun", "Filter by material");
    entry = ("ita", "Filter by material");
    entry = ("jpn", "Filter by material");
    entry = ("kor", "Filter by material");
    entry = ("nld", "Filter by material");
    entry = ("plk", "Filter by material");
    entry = ("ptb", "Filter by material");
    entry = ("ptg", "Filter by material");
    entry = ("rus", "Фильтр по материалу");
};


string_utf8 albl_CopyHOposition
{
    entry = ("enu", "Copy position");
    entry = ("chs", "Copy position");
    entry = ("cht", "Copy position");
    entry = ("csy", "Copy position");
    entry = ("deu", "Copy position");
    entry = ("esp", "Copy position");
    entry = ("fra", "Copy position");
    entry = ("hun", "Copy position");
    entry = ("ita", "Copy position");
    entry = ("jpn", "Copy position");
    entry = ("kor", "Copy position");
    entry = ("nld", "Copy position");
    entry = ("plk", "Copy position");
    entry = ("ptb", "Copy position");
    entry = ("ptg", "Copy position");
    entry = ("rus", "Копировать позицию");
};


string_utf8 albl_SelectDeselectRows
{
    entry = ("enu", "Select/deselect rows");
    entry = ("chs", "Select/deselect rows");
    entry = ("cht", "Select/deselect rows");
    entry = ("csy", "Select/deselect rows");
    entry = ("deu", "Select/deselect rows");
    entry = ("esp", "Select/deselect rows");
    entry = ("fra", "Select/deselect rows");
    entry = ("hun", "Select/deselect rows");
    entry = ("ita", "Select/deselect rows");
    entry = ("jpn", "Select/deselect rows");
    entry = ("kor", "Select/deselect rows");
    entry = ("nld", "Select/deselect rows");
    entry = ("plk", "Select/deselect rows");
    entry = ("ptb", "Select/deselect rows");
    entry = ("ptg", "Select/deselect rows");
    entry = ("rus", "Выделить/снять выделение");
};

string_utf8 albl_MSummary
{
    entry = ("enu", "M Field");
    entry = ("chs", "M Field");
    entry = ("cht", "M Field");
    entry = ("csy", "M Field");
    entry = ("deu", "M Field");
    entry = ("esp", "M Field");
    entry = ("fra", "M Field");
    entry = ("hun", "M Field");
    entry = ("ita", "M Field");
    entry = ("jpn", "M Field");
    entry = ("kor", "M Field");
    entry = ("nld", "M Field");
    entry = ("plk", "M Field");
    entry = ("ptb", "M Field");
    entry = ("ptg", "M Field");
    entry = ("rus", "М Поле");
};


string_utf8 albl_MaterialLabel
{
    entry = ("enu", "Material in EL");
    entry = ("chs", "Material in EL");
    entry = ("cht", "Material in EL");
    entry = ("csy", "Material in EL");
    entry = ("deu", "Material in EL");
    entry = ("esp", "Material in EL");
    entry = ("fra", "Material in EL");
    entry = ("hun", "Material in EL");
    entry = ("ita", "Material in EL");
    entry = ("jpn", "Material in EL");
    entry = ("kor", "Material in EL");
    entry = ("nld", "Material in EL");
    entry = ("plk", "Material in EL");
    entry = ("ptb", "Material in EL");
    entry = ("ptg", "Material in EL");
    entry = ("rus", "Материал в ВЭ");
};

string_utf8 albl_SBOM
{
    entry = ("enu", "Steel BOM");
    entry = ("chs", "Steel BOM");
    entry = ("cht", "Steel BOM");
    entry = ("csy", "Steel BOM");
    entry = ("deu", "Steel BOM");
    entry = ("esp", "Steel BOM");
    entry = ("fra", "Steel BOM");
    entry = ("hun", "Steel BOM");
    entry = ("ita", "Steel BOM");
    entry = ("jpn", "Steel BOM");
    entry = ("kor", "Steel BOM");
    entry = ("nld", "Steel BOM");
    entry = ("plk", "Steel BOM");
    entry = ("ptb", "Steel BOM");
    entry = ("ptg", "Steel BOM");
    entry = ("rus", "ТСС");
};

string_utf8 albl_AddSBOMParts
{
    entry = ("enu", "Add parts");
    entry = ("chs", "Add parts");
    entry = ("cht", "Add parts");
    entry = ("csy", "Add parts");
    entry = ("deu", "Add parts");
    entry = ("esp", "Add parts");
    entry = ("fra", "Add parts");
    entry = ("hun", "Add parts");
    entry = ("ita", "Add parts");
    entry = ("jpn", "Add parts");
    entry = ("kor", "Add parts");
    entry = ("nld", "Add parts");
    entry = ("plk", "Add parts");
    entry = ("ptb", "Add parts");
    entry = ("ptg", "Add parts");
    entry = ("rus", "Добавить детали");
};

string_utf8 albl_Net
{
    entry = ("enu", "Net");
    entry = ("chs", "Net");
    entry = ("cht", "Net");
    entry = ("csy", "Net");
    entry = ("deu", "Net");
    entry = ("esp", "Net");
    entry = ("fra", "Net");
    entry = ("hun", "Net");
    entry = ("ita", "Net");
    entry = ("jpn", "Net");
    entry = ("kor", "Net");
    entry = ("nld", "Net");
    entry = ("plk", "Net");
    entry = ("ptb", "Net");
    entry = ("ptg", "Net");
    entry = ("rus", "Нетто");
};

string_utf8 albl_Gross
{
    entry = ("enu", "Gross");
    entry = ("chs", "Gross");
    entry = ("cht", "Gross");
    entry = ("csy", "Gross");
    entry = ("deu", "Gross");
    entry = ("esp", "Gross");
    entry = ("fra", "Gross");
    entry = ("hun", "Gross");
    entry = ("ita", "Gross");
    entry = ("jpn", "Gross");
    entry = ("kor", "Gross");
    entry = ("nld", "Gross");
    entry = ("plk", "Gross");
    entry = ("ptb", "Gross");
    entry = ("ptg", "Gross");
    entry = ("rus", "Брутто");
};

string_utf8 albl_Weight
{
    entry = ("enu", "Weight net");
    entry = ("chs", "Weight net");
    entry = ("cht", "Weight net");
    entry = ("csy", "Weight net");
    entry = ("deu", "Weight net");
    entry = ("esp", "Weight net");
    entry = ("fra", "Weight net");
    entry = ("hun", "Weight net");
    entry = ("ita", "Weight net");
    entry = ("jpn", "Weight net");
    entry = ("kor", "Weight net");
    entry = ("nld", "Weight net");
    entry = ("plk", "Weight net");
    entry = ("ptb", "Weight net");
    entry = ("ptg", "Weight net");
    entry = ("rus", "Масса нетто");
};

string_utf8 albl_WeightGross
{
    entry = ("enu", "Weight gross");
    entry = ("chs", "Weight gross");
    entry = ("cht", "Weight gross");
    entry = ("csy", "Weight gross");
    entry = ("deu", "Weight gross");
    entry = ("esp", "Weight gross");
    entry = ("fra", "Weight gross");
    entry = ("hun", "Weight gross");
    entry = ("ita", "Weight gross");
    entry = ("jpn", "Weight gross");
    entry = ("kor", "Weight gross");
    entry = ("nld", "Weight gross");
    entry = ("plk", "Weight gross");
    entry = ("ptb", "Weight gross");
    entry = ("ptg", "Weight gross");
    entry = ("rus", "Масса брутто");
};

string_utf8 albl_ProfileGost
{
    entry = ("enu", "Profile code");
    entry = ("chs", "Profile code");
    entry = ("cht", "Profile code");
    entry = ("csy", "Profile code");
    entry = ("deu", "Profile code");
    entry = ("esp", "Profile code");
    entry = ("fra", "Profile code");
    entry = ("hun", "Profile code");
    entry = ("ita", "Profile code");
    entry = ("jpn", "Profile code");
    entry = ("kor", "Profile code");
    entry = ("nld", "Profile code");
    entry = ("plk", "Profile code");
    entry = ("ptb", "Profile code");
    entry = ("ptg", "Profile code");
    entry = ("rus", "Стандарт профиля");
};

string_utf8 albl_AttachedToEL
{
    entry = ("enu", "Attached to EL");
    entry = ("chs", "Attached to EL");
    entry = ("cht", "Attached to EL");
    entry = ("csy", "Attached to EL");
    entry = ("deu", "Attached to EL");
    entry = ("esp", "Attached to EL");
    entry = ("fra", "Attached to EL");
    entry = ("hun", "Attached to EL");
    entry = ("ita", "Attached to EL");
    entry = ("jpn", "Attached to EL");
    entry = ("kor", "Attached to EL");
    entry = ("nld", "Attached to EL");
    entry = ("plk", "Attached to EL");
    entry = ("ptb", "Attached to EL");
    entry = ("ptg", "Attached to EL");
    entry = ("rus", "Прикрепление к ВЭ");
};

string_utf8 albl_SelectUnattachedObjectsOnly
{
    entry = ("enu", "Select unattached only");
    entry = ("chs", "Select unattached only");
    entry = ("cht", "Select unattached only");
    entry = ("csy", "Select unattached only");
    entry = ("deu", "Select unattached only");
    entry = ("esp", "Select unattached only");
    entry = ("fra", "Select unattached only");
    entry = ("hun", "Select unattached only");
    entry = ("ita", "Select unattached only");
    entry = ("jpn", "Select unattached only");
    entry = ("kor", "Select unattached only");
    entry = ("nld", "Select unattached only");
    entry = ("plk", "Select unattached only");
    entry = ("ptb", "Select unattached only");
    entry = ("ptg", "Select unattached only");
    entry = ("rus", "Только открепленные");
};

string_utf8 albl_UnselectAll
{
    entry = ("enu", "Unselect all");
    entry = ("chs", "Unselect all");
    entry = ("cht", "Unselect all");
    entry = ("csy", "Unselect all");
    entry = ("deu", "Unselect all");
    entry = ("esp", "Unselect all");
    entry = ("fra", "Unselect all");
    entry = ("hun", "Unselect all");
    entry = ("ita", "Unselect all");
    entry = ("jpn", "Unselect all");
    entry = ("kor", "Unselect all");
    entry = ("nld", "Unselect all");
    entry = ("plk", "Unselect all");
    entry = ("ptb", "Unselect all");
    entry = ("ptg", "Unselect all");
    entry = ("rus", "Сброс выделения");
};


string_utf8 albl_AlbumDefinition
{
    entry = ("enu", "Album");
    entry = ("chs", "Album");
    entry = ("cht", "Album");
    entry = ("csy", "Album");
    entry = ("deu", "Album");
    entry = ("esp", "Album");
    entry = ("fra", "Album");
    entry = ("hun", "Album");
    entry = ("ita", "Album");
    entry = ("jpn", "Album");
    entry = ("kor", "Album");
    entry = ("nld", "Album");
    entry = ("plk", "Album");
    entry = ("ptb", "Album");
    entry = ("ptg", "Album");
    entry = ("rus", "Комплект");
};


string_utf8 albl_Property
{
    entry = ("enu", "Property");
    entry = ("chs", "Property");
    entry = ("cht", "Property");
    entry = ("csy", "Property");
    entry = ("deu", "Property");
    entry = ("esp", "Property");
    entry = ("fra", "Property");
    entry = ("hun", "Property");
    entry = ("ita", "Property");
    entry = ("jpn", "Property");
    entry = ("kor", "Property");
    entry = ("nld", "Property");
    entry = ("plk", "Property");
    entry = ("ptb", "Property");
    entry = ("ptg", "Property");
    entry = ("rus", "Свойство");
};

string_utf8 albl_Value
{
    entry = ("enu", "Value");
    entry = ("chs", "Value");
    entry = ("cht", "Value");
    entry = ("csy", "Value");
    entry = ("deu", "Value");
    entry = ("esp", "Value");
    entry = ("fra", "Value");
    entry = ("hun", "Value");
    entry = ("ita", "Value");
    entry = ("jpn", "Value");
    entry = ("kor", "Value");
    entry = ("nld", "Value");
    entry = ("plk", "Value");
    entry = ("ptb", "Value");
    entry = ("ptg", "Value");
    entry = ("rus", "Значение");
};


string_utf8 albl_Number
{
    entry = ("enu", "Pos.");
    entry = ("chs", "Pos.");
    entry = ("cht", "Pos.");
    entry = ("csy", "Pos.");
    entry = ("deu", "Pos.");
    entry = ("esp", "Pos.");
    entry = ("fra", "Pos.");
    entry = ("hun", "Pos.");
    entry = ("ita", "Pos.");
    entry = ("jpn", "Pos.");
    entry = ("kor", "Pos.");
    entry = ("nld", "Pos.");
    entry = ("plk", "Pos.");
    entry = ("ptb", "Pos.");
    entry = ("ptg", "Pos.");
    entry = ("rus", "Номер");
};


string_utf8 albl_PersonPosition
{
    entry = ("enu", "Position");
    entry = ("chs", "Position");
    entry = ("cht", "Position");
    entry = ("csy", "Position");
    entry = ("deu", "Position");
    entry = ("esp", "Position");
    entry = ("fra", "Position");
    entry = ("hun", "Position");
    entry = ("ita", "Position");
    entry = ("jpn", "Position");
    entry = ("kor", "Position");
    entry = ("nld", "Position");
    entry = ("plk", "Position");
    entry = ("ptb", "Position");
    entry = ("ptg", "Position");
    entry = ("rus", "Должность");
};


string_utf8 albl_Surname
{
    entry = ("enu", "Surname");
    entry = ("chs", "Surname");
    entry = ("cht", "Surname");
    entry = ("csy", "Surname");
    entry = ("deu", "Surname");
    entry = ("esp", "Surname");
    entry = ("fra", "Surname");
    entry = ("hun", "Surname");
    entry = ("ita", "Surname");
    entry = ("jpn", "Surname");
    entry = ("kor", "Surname");
    entry = ("nld", "Surname");
    entry = ("plk", "Surname");
    entry = ("ptb", "Surname");
    entry = ("ptg", "Surname");
    entry = ("rus", "Фамилия");
};


string_utf8 albl_UpdDrawingList
{
    entry = ("enu", "Update drawing list");
    entry = ("chs", "Update drawing list");
    entry = ("cht", "Update drawing list");
    entry = ("csy", "Update drawing list");
    entry = ("deu", "Update drawing list");
    entry = ("esp", "Update drawing list");
    entry = ("fra", "Update drawing list");
    entry = ("hun", "Update drawing list");
    entry = ("ita", "Update drawing list");
    entry = ("jpn", "Update drawing list");
    entry = ("kor", "Update drawing list");
    entry = ("nld", "Update drawing list");
    entry = ("plk", "Update drawing list");
    entry = ("ptb", "Update drawing list");
    entry = ("ptg", "Update drawing list");
    entry = ("rus", "Обновить список чертежей");
};


string_utf8 albl_CreateCSV
{
    entry = ("enu", "Create MDR");
    entry = ("chs", "Create MDR");
    entry = ("cht", "Create MDR");
    entry = ("csy", "Create MDR");
    entry = ("deu", "Create MDR");
    entry = ("esp", "Create MDR");
    entry = ("fra", "Create MDR");
    entry = ("hun", "Create MDR");
    entry = ("ita", "Create MDR");
    entry = ("jpn", "Create MDR");
    entry = ("kor", "Create MDR");
    entry = ("nld", "Create MDR");
    entry = ("plk", "Create MDR");
    entry = ("ptb", "Create MDR");
    entry = ("ptg", "Create MDR");
    entry = ("rus", "Создать MDR");
};


string_utf8 albl_LoadFromOtherMDR
{
    entry = ("enu", "Get data from other MDR");
    entry = ("chs", "Get data from other MDR");
    entry = ("cht", "Get data from other MDR");
    entry = ("csy", "Get data from other MDR");
    entry = ("deu", "Get data from other MDR");
    entry = ("esp", "Get data from other MDR");
    entry = ("fra", "Get data from other MDR");
    entry = ("hun", "Get data from other MDR");
    entry = ("ita", "Get data from other MDR");
    entry = ("jpn", "Get data from other MDR");
    entry = ("kor", "Get data from other MDR");
    entry = ("nld", "Get data from other MDR");
    entry = ("plk", "Get data from other MDR");
    entry = ("ptb", "Get data from other MDR");
    entry = ("ptg", "Get data from other MDR");
    entry = ("rus", "Получить данные из MDR");
};

string_utf8 albl_ApplyToSelectedDrawings
{
    entry = ("enu", "Apply to selected drawings");
    entry = ("chs", "Apply to selected drawings");
    entry = ("cht", "Apply to selected drawings");
    entry = ("csy", "Apply to selected drawings");
    entry = ("deu", "Apply to selected drawings");
    entry = ("esp", "Apply to selected drawings");
    entry = ("fra", "Apply to selected drawings");
    entry = ("hun", "Apply to selected drawings");
    entry = ("ita", "Apply to selected drawings");
    entry = ("jpn", "Apply to selected drawings");
    entry = ("kor", "Apply to selected drawings");
    entry = ("nld", "Apply to selected drawings");
    entry = ("plk", "Apply to selected drawings");
    entry = ("ptb", "Apply to selected drawings");
    entry = ("ptg", "Apply to selected drawings");
    entry = ("rus", "Применить к выделенным чертежам");
};

string_utf8 albl_Complex
{
    entry = ("enu", "Key");
    entry = ("chs", "Key");
    entry = ("cht", "Key");
    entry = ("csy", "Key");
    entry = ("deu", "Key");
    entry = ("esp", "Key");
    entry = ("fra", "Key");
    entry = ("hun", "Key");
    entry = ("ita", "Key");
    entry = ("jpn", "Key");
    entry = ("kor", "Key");
    entry = ("nld", "Key");
    entry = ("plk", "Key");
    entry = ("ptb", "Key");
    entry = ("ptg", "Key");
    entry = ("rus", "Ключ");
};

string_utf8 albl_List
{
    entry = ("enu", "List");
    entry = ("chs", "List");
    entry = ("cht", "List");
    entry = ("csy", "List");
    entry = ("deu", "List");
    entry = ("esp", "List");
    entry = ("fra", "List");
    entry = ("hun", "List");
    entry = ("ita", "List");
    entry = ("jpn", "List");
    entry = ("kor", "List");
    entry = ("nld", "List");
    entry = ("plk", "List");
    entry = ("ptb", "List");
    entry = ("ptg", "List");
    entry = ("rus", "Лист");
};

string_utf8 albl_Lists
{
    entry = ("enu", "Lists");
    entry = ("chs", "Lists");
    entry = ("cht", "Lists");
    entry = ("csy", "Lists");
    entry = ("deu", "Lists");
    entry = ("esp", "Lists");
    entry = ("fra", "Lists");
    entry = ("hun", "Lists");
    entry = ("ita", "Lists");
    entry = ("jpn", "Lists");
    entry = ("kor", "Lists");
    entry = ("nld", "Lists");
    entry = ("plk", "Lists");
    entry = ("ptb", "Lists");
    entry = ("ptg", "Lists");
    entry = ("rus", "Листов");
};

string_utf8 albl_Album
{
    entry = ("enu", "Album");
    entry = ("chs", "Album");
    entry = ("cht", "Album");
    entry = ("csy", "Album");
    entry = ("deu", "Album");
    entry = ("esp", "Album");
    entry = ("fra", "Album");
    entry = ("hun", "Album");
    entry = ("ita", "Album");
    entry = ("jpn", "Album");
    entry = ("kor", "Album");
    entry = ("nld", "Album");
    entry = ("plk", "Album");
    entry = ("ptb", "Album");
    entry = ("ptg", "Album");
    entry = ("rus", "Марка");
};

string_utf8 albl_Title1
{
    entry = ("enu", "Title 1");
    entry = ("chs", "Title 1");
    entry = ("cht", "Title 1");
    entry = ("csy", "Title 1");
    entry = ("deu", "Title 1");
    entry = ("esp", "Title 1");
    entry = ("fra", "Title 1");
    entry = ("hun", "Title 1");
    entry = ("ita", "Title 1");
    entry = ("jpn", "Title 1");
    entry = ("kor", "Title 1");
    entry = ("nld", "Title 1");
    entry = ("plk", "Title 1");
    entry = ("ptb", "Title 1");
    entry = ("ptg", "Title 1");
    entry = ("rus", "Заголовок 1");
};

string_utf8 albl_Title2
{
    entry = ("enu", "Title 2");
    entry = ("chs", "Title 2");
    entry = ("cht", "Title 2");
    entry = ("csy", "Title 2");
    entry = ("deu", "Title 2");
    entry = ("esp", "Title 2");
    entry = ("fra", "Title 2");
    entry = ("hun", "Title 2");
    entry = ("ita", "Title 2");
    entry = ("jpn", "Title 2");
    entry = ("kor", "Title 2");
    entry = ("nld", "Title 2");
    entry = ("plk", "Title 2");
    entry = ("ptb", "Title 2");
    entry = ("ptg", "Title 2");
    entry = ("rus", "Заголовок 2");
};

string_utf8 albl_Title3
{
    entry = ("enu", "Title 3");
    entry = ("chs", "Title 3");
    entry = ("cht", "Title 3");
    entry = ("csy", "Title 3");
    entry = ("deu", "Title 3");
    entry = ("esp", "Title 3");
    entry = ("fra", "Title 3");
    entry = ("hun", "Title 3");
    entry = ("ita", "Title 3");
    entry = ("jpn", "Title 3");
    entry = ("kor", "Title 3");
    entry = ("nld", "Title 3");
    entry = ("plk", "Title 3");
    entry = ("ptb", "Title 3");
    entry = ("ptg", "Title 3");
    entry = ("rus", "Заголовок 3");
};

string_utf8 albl_CheckResults
{
    entry = ("enu", "Check results");
    entry = ("chs", "Check results");
    entry = ("cht", "Check results");
    entry = ("csy", "Check results");
    entry = ("deu", "Check results");
    entry = ("esp", "Check results");
    entry = ("fra", "Check results");
    entry = ("hun", "Check results");
    entry = ("ita", "Check results");
    entry = ("jpn", "Check results");
    entry = ("kor", "Check results");
    entry = ("nld", "Check results");
    entry = ("plk", "Check results");
    entry = ("ptb", "Check results");
    entry = ("ptg", "Check results");
    entry = ("rus", "Результаты проверки");
};


string_utf8 albl_LoadCheckResults
{
    entry = ("enu", "Load check results");
    entry = ("chs", "Load check results");
    entry = ("cht", "Load check results");
    entry = ("csy", "Load check results");
    entry = ("deu", "Load check results");
    entry = ("esp", "Load check results");
    entry = ("fra", "Load check results");
    entry = ("hun", "Load check results");
    entry = ("ita", "Load check results");
    entry = ("jpn", "Load check results");
    entry = ("kor", "Load check results");
    entry = ("nld", "Load check results");
    entry = ("plk", "Load check results");
    entry = ("ptb", "Load check results");
    entry = ("ptg", "Load check results");
    entry = ("rus", "Загрузить результаты проверки");
};


string_utf8 albl_CheckName
{
    entry = ("enu", "Check name");
    entry = ("chs", "Check name");
    entry = ("cht", "Check name");
    entry = ("csy", "Check name");
    entry = ("deu", "Check name");
    entry = ("esp", "Check name");
    entry = ("fra", "Check name");
    entry = ("hun", "Check name");
    entry = ("ita", "Check name");
    entry = ("jpn", "Check name");
    entry = ("kor", "Check name");
    entry = ("nld", "Check name");
    entry = ("plk", "Check name");
    entry = ("ptb", "Check name");
    entry = ("ptg", "Check name");
    entry = ("rus", "Имя проверки");
};


string_utf8 albl_Result
{
    entry = ("enu", "Result");
    entry = ("chs", "Result");
    entry = ("cht", "Result");
    entry = ("csy", "Result");
    entry = ("deu", "Result");
    entry = ("esp", "Result");
    entry = ("fra", "Result");
    entry = ("hun", "Result");
    entry = ("ita", "Result");
    entry = ("jpn", "Result");
    entry = ("kor", "Result");
    entry = ("nld", "Result");
    entry = ("plk", "Result");
    entry = ("ptb", "Result");
    entry = ("ptg", "Result");
    entry = ("rus", "Результат");
};


string_utf8 albl_Description
{
    entry = ("enu", "Description");
    entry = ("chs", "Description");
    entry = ("cht", "Description");
    entry = ("csy", "Description");
    entry = ("deu", "Description");
    entry = ("esp", "Description");
    entry = ("fra", "Description");
    entry = ("hun", "Description");
    entry = ("ita", "Description");
    entry = ("jpn", "Description");
    entry = ("kor", "Description");
    entry = ("nld", "Description");
    entry = ("plk", "Description");
    entry = ("ptb", "Description");
    entry = ("ptg", "Description");
    entry = ("rus", "Описание");
};


string_utf8 albl_TotalChecks
{
    entry = ("enu", "Totaal checks");
    entry = ("chs", "Totaal checks");
    entry = ("cht", "Totaal checks");
    entry = ("csy", "Totaal checks");
    entry = ("deu", "Totaal checks");
    entry = ("esp", "Totaal checks");
    entry = ("fra", "Totaal checks");
    entry = ("hun", "Totaal checks");
    entry = ("ita", "Totaal checks");
    entry = ("jpn", "Totaal checks");
    entry = ("kor", "Totaal checks");
    entry = ("nld", "Totaal checks");
    entry = ("plk", "Totaal checks");
    entry = ("ptb", "Totaal checks");
    entry = ("ptg", "Totaal checks");
    entry = ("rus", "Всего проверок");
};


string_utf8 albl_Errornumber
{
    entry = ("enu", "Error number");
    entry = ("chs", "Error number");
    entry = ("cht", "Error number");
    entry = ("csy", "Error number");
    entry = ("deu", "Error number");
    entry = ("esp", "Error number");
    entry = ("fra", "Error number");
    entry = ("hun", "Error number");
    entry = ("ita", "Error number");
    entry = ("jpn", "Error number");
    entry = ("kor", "Error number");
    entry = ("nld", "Error number");
    entry = ("plk", "Error number");
    entry = ("ptb", "Error number");
    entry = ("ptg", "Error number");
    entry = ("rus", "Число ошибок");
};


string_utf8 albl_ErrorRate
{
    entry = ("enu", "Error rate");
    entry = ("chs", "Error rate");
    entry = ("cht", "Error rate");
    entry = ("csy", "Error rate");
    entry = ("deu", "Error rate");
    entry = ("esp", "Error rate");
    entry = ("fra", "Error rate");
    entry = ("hun", "Error rate");
    entry = ("ita", "Error rate");
    entry = ("jpn", "Error rate");
    entry = ("kor", "Error rate");
    entry = ("nld", "Error rate");
    entry = ("plk", "Error rate");
    entry = ("ptb", "Error rate");
    entry = ("ptg", "Error rate");
    entry = ("rus", "Процент ошибок");
};


string_utf8 albl_
{
    entry = ("enu", "Temp");
    entry = ("chs", "Temp");
    entry = ("cht", "Temp");
    entry = ("csy", "Temp");
    entry = ("deu", "Temp");
    entry = ("esp", "Temp");
    entry = ("fra", "Temp");
    entry = ("hun", "Temp");
    entry = ("ita", "Temp");
    entry = ("jpn", "Temp");
    entry = ("kor", "Temp");
    entry = ("nld", "Temp");
    entry = ("plk", "Temp");
    entry = ("ptb", "Temp");
    entry = ("ptg", "Temp");
    entry = ("rus", "");
};
